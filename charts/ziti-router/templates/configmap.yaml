---
# Chart name: {{- .Chart.Name }} {{- .Values.nameOverride }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ziti-router.fullname" . }}-config
  labels:
    {{- include "ziti-router.labels" . | nindent 4 }}
data:
  {{ .Values.configFile }}: |-

    v: 3

    identity:
      # expected filename defined in SetZitiRouterIdentityCert()
      cert:        {{ .Values.configMountDir }}/{{ include "ziti-router.fullname" . }}.cert
      # expected filename defined in SetZitiRouterIdentityServerCert()
      server_cert: {{ .Values.configMountDir }}/{{ include "ziti-router.fullname" . }}.server.chain.cert
      # expected filename defined in SetZitiRouterIdentityKey()
      key:         {{ .Values.configMountDir }}/{{ include "ziti-router.fullname" . }}.key
      # expected filename defined in SetZitiRouterIdentityCA()
      ca:          {{ .Values.configMountDir }}/{{ include "ziti-router.fullname" . }}.cas
    {{- if and .Values.identity.altServerCerts (gt (len .Values.identity.altServerCerts) 0 ) }}
      alt_server_certs:
      {{- range .Values.identity.altServerCerts }}
        {{- if eq .mode "localFile" }}
      - server_cert: {{ .serverCert }}
        server_key:  {{ .serverKey }}
        {{- end }}
      {{- end }}
    {{- end }}

    ctrl:
      # router control plane API (:6262)
      endpoint:    tls:{{ required "You must set .Values.ctrl.endpoint to the control plane advertised address. Try adding --set ctrl.endpoint=ziti-controller.example.com:6262 to your Helm command" .Values.ctrl.endpoint }}

    {{- if .Values.proxy }}
    proxy:
      type: {{ .Values.proxy.type }}
      address: {{ .Values.proxy.address }}:{{ .Values.proxy.port }}
    {{- end }}
    link:
      dialers:
        - binding: transport
      # When 'transport' is disabled this means we are a 'private' router, i.e.,
      # not providing incoming links to other routers. Private routers still
      # join the mesh, but only form outgoing links.
      {{- if .Values.linkListeners.transport.service.enabled }}
      listeners:
        - binding:          transport
          bind:             tls:0.0.0.0:{{ .Values.linkListeners.transport.containerPort }}
          advertise:        tls:{{ coalesce .Values.linkListeners.transport.advertisedHost (printf "%s-transport.%s.svc" (include "ziti-router.fullname" . ) .Release.Namespace) }}:{{ .Values.linkListeners.transport.advertisedPort }}
          options:
            outQueueSize:   4
      {{- end }}
    {{- if or (and .Values.tunnel.mode (ne .Values.tunnel.mode "none" )) (eq .Values.edge.enabled true) }}
    listeners:
    # bindings of edge and tunnel requires an "edge" section below
    {{- if (eq .Values.edge.enabled true) }}
      - binding: edge
        address: {{ .Values.edge.protocol }}:0.0.0.0:{{ .Values.edge.containerPort }}
        options:
          advertise: {{ required "You must set .Values.edge.advertisedHost to the domain name to advertise for this router's edge listener. Try adding --set edge.advertisedHost=router11.ziti.example.org to your Helm command" .Values.edge.advertisedHost }}:{{ .Values.edge.advertisedPort }}
          {{- if .Values.edge.options }}
            {{- toYaml .Values.edge.options | nindent 10 }}
          {{- end }}
    {{- end }}
    {{- if .Values.edge.additionalListeners }}
      {{- range $index, $element := .Values.edge.additionalListeners }}
      - binding: edge
        address: {{ $element.protocol }}:0.0.0.0:{{ $element.containerPort }}
        options:
          advertise: {{ required (printf "You must set .Values.edge.additionalListeners[%d].advertisedHost to the domain name to advertise for this router's additional edge listener. Try adding --set edge.additionalListeners[%d].advertisedHost=router11-wss.ziti.example.org to your Helm command" $index $index) $element.advertisedHost }}:{{ $element.advertisedPort }}
          {{- if $element.options }}
            {{- toYaml $element.options | nindent 10 }}
          {{- end }}
      {{- end }}
    {{- end }}
    {{- if and .Values.tunnel.mode (ne .Values.tunnel.mode "none" ) }}
      - binding: tunnel
        options:
          {{- if and .Values.tunnel.diverterPath ( ne .Values.tunnel.diverterPath "none" ) }}
            mode: {{ .Values.tunnel.mode }}:{{ .Values.tunnel.diverterPath }}
          {{- else }}
            mode: {{ .Values.tunnel.mode }}
          {{- end }}
          {{- if eq .Values.tunnel.mode "tproxy" }}
            {{- if .Values.tunnel.resolver }}
            resolver: {{ .Values.tunnel.resolver }}
            {{- end }}
            {{- if .Values.tunnel.dnsSvcIpRange }}
            dnsSvcIpRange: {{ .Values.tunnel.dnsSvcIpRange }}
            {{- end }}
            lanIf: {{ .Values.tunnel.lanIf }}
          {{- else if eq .Values.tunnel.mode "proxy" }}
            services:
            {{- range .Values.tunnel.proxyServices }}
              - "{{ .zitiService }}:{{ .containerPort | default .advertisedPort }}"
            {{- end }}
          {{- end }}
    {{- end }}
    {{- end }}

    {{- if eq .Values.fabric.metrics.enabled true }}
    metrics:
      reportInterval: 5s
      intervalAgeThreshold: 5s
    {{- end }}

    edge: # TODO switch back to top level when https://github.com/openziti/ziti/issues/2193 is finished
     csr:
      {{- if .Values.csr.country }}
      country: {{ .Values.csr.country }}
      {{- end }}
      {{- if .Values.csr.province }}
      province: {{ .Values.csr.province }}
      {{- end }}
      {{- if .Values.csr.locality }}
      locality: {{ .Values.csr.locality }}
      {{- end }}
      {{- if .Values.csr.organization }}
      organization: {{ .Values.csr.organization }}
      {{- end }}
      {{- if .Values.csr.organizationalUnit }}
      organizationalUnit: {{ .Values.csr.organizationalUnit }}
      {{- end }}
      sans:
        dns:
          {{- if eq (default false .Values.csr.sans.noDefaults) false }}
          - localhost
            {{- if and .Values.edge.enabled .Values.edge.advertisedHost }}
          - {{ .Values.edge.advertisedHost }}
            {{- end }}
            {{- if .Values.edge.additionalListeners }}
              {{- range .Values.edge.additionalListeners }}
                {{- if .addHostToSan }}
          - {{ .advertisedHost }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if and .Values.linkListeners.transport.service.enabled .Values.linkListeners.transport.advertisedHost }}
          - {{ .Values.linkListeners.transport.advertisedHost }}
            {{- end }}
          {{- end }}  # end if .Values.csr.sans.noDefaults
          {{- range .Values.csr.sans.dns }}
          - {{ . | quote }}
          {{- end }}
        ip:
          {{- if eq (default false .Values.csr.sans.noDefaults) false }}
          - 127.0.0.1
            {{- if and .Values.edge.enabled  .Values.edge.service.enabled }}
              {{- with .Values.edge.service.loadBalancerIP }}
          - {{ . }}
              {{- end }}
              {{- with .Values.edge.service.externalIPs }}
                {{- toYaml . | nindent 4 }}
              {{- end }}
            {{- end }}
            {{- if and .Values.linkListeners.transport.service.enabled  .Values.linkListeners.transport.service.enabled }}
              {{- with .Values.linkListeners.transport.service.loadBalancerIP }}
          - {{ . }}
              {{- end }}
              {{- with .Values.linkListeners.transport.service.externalIPs }}
                {{- toYaml . | nindent 4 }}
              {{- end }}
            {{- end }}
          {{- end }} # end if .Values.csr.sans.noDefaults
          {{- range .Values.csr.sans.ip }}
          - {{ . | quote }}
          {{- end }}
        email:
          {{- range .Values.csr.sans.email }}
          - {{ . | quote }}
          {{- end }}
        uri:
          {{- range .Values.csr.sans.uri }}
          - {{ . | quote }}
          {{- end }}

    {{- if eq .Values.websocket.enabled true }}
    transport:
      ws:
      {{- omit .Values.websocket "enabled" | toYaml  | nindent 8 }}
    {{- end }}

    {{- if .Values.forwarder }}
    forwarder:
        {{- toYaml .Values.forwarder | nindent 8 }}
    {{- end }}
