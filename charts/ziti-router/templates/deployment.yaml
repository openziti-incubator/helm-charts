apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ziti-router.fullname" . }}
  labels:
    {{- include "ziti-router.labels" . | nindent 4 }}
    app.kubernetes.io/component: "ziti-router"
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "ziti-router.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "ziti-router"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ziti-router.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "ziti-router"
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- toYaml .Values.ports | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{ if .Values.image.command }}
          command:
          {{- range .Values.image.command }}
            - {{ . | quote }}
          {{- end }}
          {{ end }}
          args:
            {{- tpl (toYaml .Values.image.args) . | nindent 12 }}
          env:
            - name: ZITI_ROUTER_IDENTITY_DIR
              value: {{ .Values.identityMountDir }}
            - name: PFXLOG_NO_JSON
              value: "true"
          volumeMounts:
            - mountPath: {{ .Values.identityMountDir }}
              name: ziti-router-identity
              readOnly: true
            - mountPath: {{ .Values.configMountDir }}
              name: endpoints-data
              readOnly: false
            - mountPath: {{ .Values.configMountDir }}/{{ .Values.configFile }}
              name: ziti-router-config
              subPath: {{ .Values.configFile }}  # project the read-only config into the writeable volume to allow router to write ./endpoints state file in same dir as config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: ziti-router-identity
          secret:
            secretName: {{ include "ziti-router.fullname" . }}-identity
            defaultMode: 0444
        - name: ziti-router-config
          configMap:
            name: {{ include "ziti-router.fullname" . }}-config
            defaultMode: 0444
        - name: endpoints-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "ziti-router.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
