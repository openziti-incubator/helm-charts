# Default values for ziti-console.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ingress:
  enabled: true
  ingressClassName: ""
  annotations: {}
    # kubernetes.io/ingress.class: 'nginx'
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  labels: {}
  hosts:
    - host: ziti-console.domain.tld
      paths:
        - path: "/"
          pathType: Prefix
  tls: []

httpContainerPort: &httpContainerPort 1408

ports:
  - name: http
    containerPort: *httpContainerPort

service:
  enabled: true
  port: *httpContainerPort
  name: http
  type: ClusterIP
  labels: {}
  annotations: {}

settings:
  edgeControllers: []
  fabricControllers: []


image:
  repository: openziti/zac
  pullPolicy: Always
#  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: 0.26.11
#   command: ["sh", "-c", "while true; do sleep 11; done"]
  args: []
  pullSecrets: []
  # command: ["node", "/usr/src/app/server.js"]
  command: ["node", "/usr/src/app/server.js", "debug"]

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  # capabilities:
  #   add:
  #     - NET_ADMIN

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


nodeSelector: {}
#  kubernetes.io/role: master

tolerations: []
  # - key: node-role.kubernetes.io/master
  #   operator: Exists
  #   effect: NoSchedule

affinity: {}

replicas: 1