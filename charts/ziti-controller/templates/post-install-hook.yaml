{{- if .Values.defaultRouter.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-post-install-job
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0
  completions: 1
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        {{- include "ziti-controller.labels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "ziti-controller.fullname" . }}-hook-serviceaccount
      containers:
      - name: post-install-job
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: ZITI_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name:  {{ include "ziti-controller.fullname" . }}-admin-secret
                key: admin-user
          - name: ZITI_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  {{ include "ziti-controller.fullname" . }}-admin-secret
                key: admin-password
          - name: ZITI_CTRL_PLANE_CA
            value: {{ .Values.configMountDir }}/{{ .Values.ctrlPlaneCaDir }}
        volumeMounts:
          - mountPath: {{ .Values.execMountDir }}/create-default-router.bash
            name: ziti-controller-config
            subPath: create-default-router.bash
          - mountPath: {{ .Values.configMountDir }}/{{ .Values.ctrlPlaneCaDir }}
            name: ziti-controller-ctrl-plane-cas
            readOnly: true
        command: ["create-default-router.bash"]
      volumes:
        - name: ziti-controller-config
          configMap:
            name: {{ include "ziti-controller.fullname" . }}-config
            items:
              - key: create-default-router.bash
                path: create-default-router.bash
                mode: 0555
        - name: ziti-controller-ctrl-plane-cas
          configMap:
            name: {{ include "ziti-controller.fullname" . }}-ctrl-plane-cas
            defaultMode: 0444
{{- end }}
